{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangao/Desktop/laiofferProject/Around/Front_End/around-web/src/components/PhotoGallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, message, Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Gallery from \"react-grid-gallery\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst captionStyle = {\n  backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n  maxHeight: \"240px\",\n  overflow: \"hidden\",\n  position: \"absolute\",\n  bottom: \"0\",\n  width: \"100%\",\n  color: \"white\",\n  padding: \"2px\",\n  fontSize: \"90%\"\n};\nconst wrapperStyle = {\n  display: \"block\",\n  minHeight: \"1px\",\n  width: \"100%\",\n  border: \"1px solid #ddd\",\n  overflow: \"auto\"\n};\n\nfunction PhotoGallery(props) {\n  _s();\n\n  const [images, setImages] = useState(props.images);\n  const [curImgIdx, setCurImgIdx] = useState(0);\n  const imageArr = images.map(image => {\n    return { ...image,\n      customOverlay: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: captionStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `${image.user}: ${image.caption}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    };\n  });\n\n  const onDeleteImage = () => {\n    if (window.confirm(`Are you sure you want to delete this image?`)) {\n      const curImg = images[curImgIdx];\n      const newImageArr = images.filter((img, index) => index !== curImgIdx);\n      console.log(\"delete image \", newImageArr);\n      const opt = {\n        method: \"DELETE\",\n        url: `${BASE_URL}/post/${curImg.postId}`,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n        }\n      };\n      axios(opt).then(res => {\n        console.log(\"delete result -> \", res); // case1: success\n\n        if (res.status === 200) {\n          // step1: set state\n          setImages(newImageArr);\n        }\n      }).catch(err => {\n        // case2: fail\n        message.error(\"Fetch posts failed!\");\n        console.log(\"fetch posts failed: \", err.message);\n      });\n    }\n  };\n\n  const onCurrentImageChange = index => {\n    console.log(\"curIdx \", index);\n    setCurImgIdx(index);\n  };\n\n  useEffect(() => {\n    setImages(props.images);\n  }, [props.images]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: wrapperStyle,\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      images: imageArr,\n      enableImageSelection: false,\n      backdropClosesModal: true,\n      currentImageWillChange: onCurrentImageChange,\n      customControls: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: \"10px\",\n          marginLeft: \"5px\"\n        },\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this),\n        size: \"small\",\n        onClick: onDeleteImage,\n        children: \"Delete Image\"\n      }, \"deleteImage\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhotoGallery, \"dO7ikYE6aBASCfNY5Py8JYLI/s8=\");\n\n_c = PhotoGallery;\nPhotoGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    thumbnailWidth: PropTypes.number.isRequired,\n    thumbnailHeight: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default PhotoGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"sources":["/Users/sebastiangao/Desktop/laiofferProject/Around/Front_End/around-web/src/components/PhotoGallery.js"],"names":["React","useState","useEffect","PropTypes","Button","message","Modal","DeleteOutlined","axios","Gallery","BASE_URL","TOKEN_KEY","captionStyle","backgroundColor","maxHeight","overflow","position","bottom","width","color","padding","fontSize","wrapperStyle","display","minHeight","border","PhotoGallery","props","images","setImages","curImgIdx","setCurImgIdx","imageArr","map","image","customOverlay","user","caption","onDeleteImage","window","confirm","curImg","newImageArr","filter","img","index","console","log","opt","method","url","postId","headers","Authorization","localStorage","getItem","then","res","status","catch","err","error","onCurrentImageChange","marginTop","marginLeft","propTypes","arrayOf","shape","string","isRequired","src","thumbnail","thumbnailWidth","number","thumbnailHeight"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, message, Modal } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Gallery from \"react-grid-gallery\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\n\nconst captionStyle = {\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n    maxHeight: \"240px\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    bottom: \"0\",\n    width: \"100%\",\n    color: \"white\",\n    padding: \"2px\",\n    fontSize: \"90%\"\n};\n\nconst wrapperStyle = {\n    display: \"block\",\n    minHeight: \"1px\",\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    overflow: \"auto\"\n};\n\nfunction PhotoGallery(props) {\n    const [images, setImages] = useState(props.images);\n    const [curImgIdx, setCurImgIdx] = useState(0);\n\n    const imageArr = images.map((image) => {\n        return {\n            ...image,\n            customOverlay: (\n                <div style={captionStyle}>\n                    <div>{`${image.user}: ${image.caption}`}</div>\n                </div>\n            )\n        };\n    });\n\n    const onDeleteImage = () => {\n        if (window.confirm(`Are you sure you want to delete this image?`)) {\n            const curImg = images[curImgIdx];\n            const newImageArr = images.filter((img, index) => index !== curImgIdx);\n            console.log(\"delete image \", newImageArr);\n            const opt = {\n                method: \"DELETE\",\n                url: `${BASE_URL}/post/${curImg.postId}`,\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n                }\n            };\n\n            axios(opt)\n                .then((res) => {\n                    console.log(\"delete result -> \", res);\n                    // case1: success\n                    if (res.status === 200) {\n                        // step1: set state\n                        setImages(newImageArr);\n                    }\n                })\n                .catch((err) => {\n                    // case2: fail\n                    message.error(\"Fetch posts failed!\");\n                    console.log(\"fetch posts failed: \", err.message);\n                });\n        }\n    };\n\n    const onCurrentImageChange = (index) => {\n        console.log(\"curIdx \", index);\n        setCurImgIdx(index);\n    };\n\n    useEffect(() => {\n        setImages(props.images);\n    }, [props.images]);\n\n    return (\n        <div style={wrapperStyle}>\n            <Gallery\n                images={imageArr}\n                enableImageSelection={false}\n                backdropClosesModal={true}\n                currentImageWillChange={onCurrentImageChange}\n                customControls={[\n                    <Button\n                        style={{ marginTop: \"10px\", marginLeft: \"5px\" }}\n                        key=\"deleteImage\"\n                        type=\"primary\"\n                        icon={<DeleteOutlined />}\n                        size=\"small\"\n                        onClick={onDeleteImage}\n                    >\n                        Delete Image\n                    </Button>\n                ]}\n            />\n        </div>\n    );\n}\n\nPhotoGallery.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            user: PropTypes.string.isRequired,\n            caption: PropTypes.string.isRequired,\n            src: PropTypes.string.isRequired,\n            thumbnail: PropTypes.string.isRequired,\n            thumbnailWidth: PropTypes.number.isRequired,\n            thumbnailHeight: PropTypes.number.isRequired\n        })\n    ).isRequired\n};\n\nexport default PhotoGallery;\n\n\n"]},"metadata":{},"sourceType":"module"}