{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangao/Desktop/laiofferProject/Around/Front_End/around-web/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Tabs, message, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport PhotoGallery from \"./PhotoGallery\";\nimport { SEARCH_KEY, BASE_URL, TOKEN_KEY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\n\nfunction Home(props) {\n  _s();\n\n  const [posts, setPost] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"image\");\n  const [searchOption, setSearchOption] = useState({\n    type: SEARCH_KEY.all,\n    keyword: \"\"\n  });\n  useEffect(() => {\n    const {\n      type,\n      keyword\n    } = searchOption;\n    fetchPost(searchOption);\n  }, [searchOption]);\n\n  const fetchPost = option => {\n    const {\n      type,\n      keyword\n    } = option;\n    let url = \"\";\n\n    if (type === SEARCH_KEY.all) {\n      url = `${BASE_URL}/search`;\n    } else if (type === SEARCH_KEY.user) {\n      url = `${BASE_URL}/search?user=${keyword}`;\n    } else {\n      url = `${BASE_URL}/search?keywords=${keyword}`;\n    }\n\n    const opt = {\n      method: \"GET\",\n      url: url,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n      }\n    };\n    axios(opt).then(res => {\n      if (res.status === 200) {\n        setPost(res.data);\n      }\n    }).catch(err => {\n      message.error(\"Fetch posts failed!\");\n      console.log(\"fetch posts failed: \", err.message);\n    });\n  };\n\n  const renderPosts = type => {\n    if (!posts || posts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No data!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (type === \"image\") {\n      const imageArr = posts.filter(item => item.type === \"image\").map(image => {\n        return {\n          src: image.url,\n          user: image.user,\n          caption: image.caption,\n          thumbnail: image.url,\n          thumbnailWidth: 300,\n          thumbnailHeight: 200\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(PhotoGallery, {\n        images: imageArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    } else if (type === \"video\") {\n      console.log(\"video -> \", posts);\n      return \"videos\";\n    }\n  };\n\n  const operations = /*#__PURE__*/_jsxDEV(Button, {\n    children: \"Upload\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 24\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        onChange: key => setActiveTab(key),\n        defaultActiveKey: \"image\",\n        activeKey: activeTab,\n        tabBarExtraContent: operations,\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Images\",\n          children: renderPosts(\"image\")\n        }, \"image\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Videos\",\n          children: renderPosts(\"video\")\n        }, \"video\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"r+qIcj+crzEBNcUOXNIfbA8432M=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sebastiangao/Desktop/laiofferProject/Around/Front_End/around-web/src/components/Home.js"],"names":["React","useState","useEffect","Tabs","message","Row","Col","Button","axios","SearchBar","PhotoGallery","SEARCH_KEY","BASE_URL","TOKEN_KEY","TabPane","Home","props","posts","setPost","activeTab","setActiveTab","searchOption","setSearchOption","type","all","keyword","fetchPost","option","url","user","opt","method","headers","Authorization","localStorage","getItem","then","res","status","data","catch","err","error","console","log","renderPosts","length","imageArr","filter","item","map","image","src","caption","thumbnail","thumbnailWidth","thumbnailHeight","operations","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tabs, message, Row, Col, Button } from \"antd\";\nimport axios from \"axios\";\n\nimport SearchBar from \"./SearchBar\";\nimport PhotoGallery from \"./PhotoGallery\";\nimport { SEARCH_KEY, BASE_URL, TOKEN_KEY } from \"../constants\";\n\nconst { TabPane } = Tabs;\n\nfunction Home(props) {\n    const [posts, setPost] = useState([]);\n    const [activeTab, setActiveTab] = useState(\"image\");\n    const [searchOption, setSearchOption] = useState({\n        type: SEARCH_KEY.all,\n        keyword: \"\"\n    });\n\n    useEffect(() => {\n        const { type, keyword } = searchOption;\n        fetchPost(searchOption);\n    }, [searchOption]);\n\n    const fetchPost = (option) => {\n        const { type, keyword } = option;\n        let url = \"\";\n\n        if (type === SEARCH_KEY.all) {\n            url = `${BASE_URL}/search`;\n        } else if (type === SEARCH_KEY.user) {\n            url = `${BASE_URL}/search?user=${keyword}`;\n        } else {\n            url = `${BASE_URL}/search?keywords=${keyword}`;\n        }\n\n        const opt = {\n            method: \"GET\",\n            url: url,\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n            }\n        };\n\n        axios(opt)\n            .then((res) => {\n                if (res.status === 200) {\n                    setPost(res.data);\n                }\n            })\n            .catch((err) => {\n                message.error(\"Fetch posts failed!\");\n                console.log(\"fetch posts failed: \", err.message);\n            });\n    };\n\n    const renderPosts = (type) => {\n        if (!posts || posts.length === 0) {\n            return <div>No data!</div>;\n        }\n        if (type === \"image\") {\n            const imageArr = posts\n                .filter((item) => item.type === \"image\")\n                .map((image) => {\n                    return {\n                        src: image.url,\n                        user: image.user,\n                        caption: image.caption,\n                        thumbnail: image.url,\n                        thumbnailWidth: 300,\n                        thumbnailHeight: 200\n                    };\n                });\n\n            return <PhotoGallery images={imageArr} />;\n        } else if (type === \"video\") {\n            console.log(\"video -> \", posts);\n            return \"videos\";\n        }\n    };\n\n    const operations = <Button>Upload</Button>;\n    return (\n        <div className=\"home\">\n            <SearchBar />\n            <div className=\"display\">\n                <Tabs\n                    onChange={(key) => setActiveTab(key)}\n                    defaultActiveKey=\"image\"\n                    activeKey={activeTab}\n                    tabBarExtraContent={operations}\n                >\n                    <TabPane tab=\"Images\" key=\"image\">\n                        {renderPosts(\"image\")}\n                    </TabPane>\n                    <TabPane tab=\"Videos\" key=\"video\">\n                        {renderPosts(\"video\")}\n                    </TabPane>\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}